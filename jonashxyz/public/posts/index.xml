<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Jonas Hestdahl</title>
    <link>https://jonash.xyz/posts/</link>
    <description>Recent content in Posts on Jonas Hestdahl</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 24 Mar 2024 13:06:35 +0100</lastBuildDate><atom:link href="https://jonash.xyz/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Convert Svg to Pdf Using Inkscape</title>
      <link>https://jonash.xyz/posts/convert-svg-to-pdf-using-inkscape/</link>
      <pubDate>Sun, 24 Mar 2024 13:06:35 +0100</pubDate>
      
      <guid>https://jonash.xyz/posts/convert-svg-to-pdf-using-inkscape/</guid>
      <description>Convert SVG to PDF Today I learned that if you have Inkscape installed, you can convert .SVG files into .PDF, using this simple one-liner: inkscape input.svg --export-filename=output.pdf
Replace input.svg with the name of your SVG file and output.pdf with the desired output PDF file name. Example use case Say you have developed a drawing or mindmap in Excalidraw. You can export this to SVG and then run the one-liner to convert it to PDF.</description>
      <content:encoded><![CDATA[<h2 id="convert-svg-to-pdf">Convert SVG to PDF</h2>
<p>Today I learned that if you have Inkscape installed, you can convert .SVG files into .PDF, using this simple one-liner:
<code>inkscape input.svg --export-filename=output.pdf</code></p>
<ul>
<li>Replace <code>input.svg</code> with the name of your SVG file and <code>output.pdf</code> with the desired output PDF file name.</li>
</ul>
<h2 id="example-use-case">Example use case</h2>
<p>Say you have developed a drawing or mindmap in Excalidraw. You can export this to SVG and then run the one-liner to convert it to PDF. Very cool!</p>
<h2 id="links-">Links :</h2>
<p>202403245112</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Obsidian Sync Github Script</title>
      <link>https://jonash.xyz/posts/obsidian-sync-github-script/</link>
      <pubDate>Wed, 20 Mar 2024 17:55:52 +0100</pubDate>
      
      <guid>https://jonash.xyz/posts/obsidian-sync-github-script/</guid>
      <description>obsidian-sync-github Why write this script? I&amp;rsquo;m using Arch Linux and the Obsidian electron AppImage from AUR. It works great, but for some reason the obsidian git community plugin makes the app super sluggish. I removed the plugin and wrote my own bash script instead.
How the script works Auto-pushes Obsidian notes to GitHub via a cronjob every 30 minutes crontab -e -&amp;gt; */30 * * * * /home/jonash/.local/bin/obsidian-sync-github Sends a notification via dunstify and your e-mail address of choice #!</description>
      <content:encoded><![CDATA[<h1 id="obsidian-sync-github">obsidian-sync-github</h1>
<h2 id="why-write-this-script">Why write this script?</h2>
<p>I&rsquo;m using Arch Linux and the Obsidian electron AppImage from AUR. It works great, but for some reason the obsidian git community plugin makes the app super sluggish. I removed the plugin and wrote my own bash script instead.</p>
<h2 id="how-the-script-works">How the script works</h2>
<ul>
<li>Auto-pushes Obsidian notes to GitHub via a cronjob every 30 minutes
<ul>
<li>crontab -e -&gt; <code>*/30 * * * * /home/jonash/.local/bin/obsidian-sync-github</code></li>
</ul>
</li>
<li>Sends a notification via dunstify and your e-mail address of choice</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/bin/bash
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="c1"># Navigate to your repository directory</span>
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> ~/obsidian/
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Add all changes to git</span>
</span></span><span class="line"><span class="cl">git add .
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Commit the changes with a current timestamp</span>
</span></span><span class="line"><span class="cl">git commit -m <span class="s2">&#34;Automated commit on </span><span class="k">$(</span>date<span class="k">)</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Push the changes</span>
</span></span><span class="line"><span class="cl">git push origin main
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Send notification after the push is sent</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> git push origin main<span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">  <span class="c1"># Check if dunstify is available (dunst&#39;s notification tool)</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span> <span class="nb">command</span> -v dunstify &gt;/dev/null 2&gt;<span class="p">&amp;</span>1<span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># Send a notification</span>
</span></span><span class="line"><span class="cl">    dunstify <span class="s2">&#34;Successfully pushed obsidian notes to GitHub!&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">else</span>
</span></span><span class="line"><span class="cl">    <span class="nb">echo</span> <span class="s2">&#34;dunstify not found, cannot send notification&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="k">fi</span>
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">  <span class="c1"># Email details</span>
</span></span><span class="line"><span class="cl">  <span class="nv">recipient</span><span class="o">=</span><span class="s2">&#34;jonash@jonash.xyz&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="nv">subject</span><span class="o">=</span><span class="s2">&#34;Subject: Obsidian Notes Push Successful&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="nv">body</span><span class="o">=</span><span class="s2">&#34;Your Obsidian notes have been successfully pushed to GitHub on </span><span class="k">$(</span>date<span class="k">)</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">  <span class="c1"># Send the email</span>
</span></span><span class="line"><span class="cl">  <span class="nb">echo</span> -e <span class="s2">&#34;</span><span class="nv">$subject</span><span class="s2">\n\n</span><span class="nv">$body</span><span class="s2">&#34;</span> <span class="p">|</span> msmtp <span class="s2">&#34;</span><span class="nv">$recipient</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">else</span>
</span></span><span class="line"><span class="cl">  <span class="nb">echo</span> <span class="s2">&#34;git push failed&#34;</span>
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Create Your Own Website With HUGO</title>
      <link>https://jonash.xyz/posts/generate-a-website-with-hugo/</link>
      <pubDate>Thu, 14 Mar 2024 14:42:54 +0100</pubDate>
      
      <guid>https://jonash.xyz/posts/generate-a-website-with-hugo/</guid>
      <description>What is HUGO? HUGO is a framework, designed to convert code and content into static websites. It is written in Go, making it exceptionally fast at compiling websites, even those with thousands of pages. Here&amp;rsquo;s how it works:
Fast and Efficient: HUGO takes your content, which you can write in Markdown (a lightweight markup language), and your templates, which define the structure and design of your site, and combines them to generate a complete, static website.</description>
      <content:encoded><![CDATA[<h2 id="what-is-hugo">What is HUGO?</h2>
<p>HUGO is a framework, designed to convert code and content into static websites. It is written in Go, making it exceptionally fast at compiling websites, even those with thousands of pages. Here&rsquo;s how it works:</p>
<ul>
<li>
<p><strong>Fast and Efficient</strong>: HUGO takes your content, which you can write in Markdown (a lightweight markup language), and your templates, which define the structure and design of your site, and combines them to generate a complete, static website. These websites are made up of prebuilt HTML files, making them very fast to load and easy to host.</p>
</li>
<li>
<p><strong>No Database Required</strong>: Unlike dynamic site generators that require databases to store your site&rsquo;s content, HUGO works with files only. This means your website&rsquo;s content and layout are defined through text files, templates, and configurations without needing a database. This simplicity leads to increased security and ease of maintenance.</p>
</li>
<li>
<p><strong>Customizable</strong>: HUGO is highly customizable, allowing you to create websites that range from blogs and portfolios to documentation and company websites, all while providing a wide range of themes and plugins to enhance functionality and appearance.</p>
</li>
<li>
<p><strong>Live Reloading</strong>: It offers a live reload feature, which means you can see the changes you make in real-time as you develop your site. This makes the development process more intuitive and faster.</p>
</li>
<li>
<p><strong>Static Site Benefits</strong>: Since HUGO generates static websites, these sites are inherently secure, fast, and reliable. They can be hosted on any web server or services like GitHub Pages, Netlify, and Vercel, often with little to no cost for hosting.</p>
</li>
</ul>
<p>In essence, HUGO is a tool that helps developers and content creators build websites quickly and efficiently, without worrying about databases or server-side scripting, making it an excellent choice for projects where speed, security, and simplicity are prioritized.</p>
<h2 id="step-1-install-hugo">Step 1: Install HUGO</h2>
<ul>
<li><strong>Windows:</strong> Use Chocolatey: <code>choco install hugo -confirm</code></li>
<li><strong>macOS:</strong> Use Homebrew: <code>brew install hugo</code></li>
<li><strong>Linux:</strong> Use your distro&rsquo;s package manager, for example, <code>sudo apt-get install hugo</code> for Ubuntu.</li>
</ul>
<h2 id="step-2-create-a-new-site">Step 2: Create a New Site</h2>
<ul>
<li>Open a terminal or command prompt.</li>
<li>Navigate to the directory where you want your site.</li>
<li>Run <code>hugo new site mywebsite -f &quot;yaml&quot;</code> - replacing <code>mywebsite</code> with your desired site name.</li>
</ul>
<h2 id="step-3-add-a-theme">Step 3: Add a Theme</h2>
<ul>
<li>Find a theme you like from <a href="https://themes.gohugo.io/">HUGO Themes</a>.</li>
<li>Clone the theme into your project: e.g.</li>
</ul>
<pre tabindex="0"><code>git clone https://github.com/reorx/hugo-PaperModX themes/PaperModX --depth=1
</code></pre><ul>
<li>Add the theme to your site&rsquo;s config file: <code>echo 'theme : nameOfYourTheme' &gt;&gt; config.yml</code>
<ul>
<li>e.g. <code>echo 'theme: PaperModX' &gt;&gt; config.yml</code></li>
<li>you can remove the <code>hugo.toml</code> file, since we are using yaml config instead</li>
</ul>
</li>
</ul>
<h2 id="step-4-add-content">Step 4: Add Content</h2>
<ul>
<li>cd into the <code>archetypes</code> folder and replace the contents of <code>defaults.md</code> with the following code:</li>
</ul>
<pre tabindex="0"><code>---
title : &#39;{{ replace .File.ContentBaseName &#34;-&#34; &#34; &#34; | title }}&#39;
date : {{ .Date }}
draft : false
---
</code></pre><ul>
<li>Create a new post: <code>hugo new posts/my-first-post.md</code></li>
<li>Open the file in a text editor, and you&rsquo;ll see some front matter at the top. Below this, add your content.</li>
</ul>
<h2 id="step-5-start-the-hugo-server">Step 5: Start the HUGO Server</h2>
<ul>
<li>Run <code>hugo server </code> in your site directory.</li>
<li>Open a web browser and go to <code>http://localhost:1313</code> to see your site.</li>
</ul>
<h2 id="step-6-build-your-site">Step 6: Build Your Site</h2>
<ul>
<li>When ready to publish, run <code>hugo</code> to build your static site.</li>
<li>The output will be in the <code>public</code> directory, ready to be deployed to your hosting provider.</li>
<li>I have added an alias, to my .zshrc file, to update my website after building with the <code>hugo</code> command, with the help of rsync:</li>
</ul>
<pre tabindex="0"><code>  update_website=&#34;rsync -vrP --delete-after /home/jonash/dotfiles/website/website/jonashxyz/public/ root@jonash.xyz:/var/www/jonashxyz/&#34; \
</code></pre><ul>
<li>I got the alias from <a href="https://lukesmith.xyz/">Luke Smith</a></li>
</ul>
<h2 id="done">Done</h2>
<p>Congratulations! You&rsquo;ve just created a website with HUGO. For more detailed instructions, visit the <a href="https://gohugo.io/documentation/">official HUGO documentation</a>.</p>
<p>Also, read the documentation of your chosen theme, e.g. <a href="https://reorx.github.io/hugo-PaperModX/">PaperModX</a>.</p>
<p>Enjoy!</p>
<p>Links:</p>
<p>202403081313</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Unshackle Your Digital Life</title>
      <link>https://jonash.xyz/posts/how-to-live-an-unshackled-digital-life/</link>
      <pubDate>Sun, 10 Mar 2024 23:38:13 +0100</pubDate>
      
      <guid>https://jonash.xyz/posts/how-to-live-an-unshackled-digital-life/</guid>
      <description>Unshackle Your Digital Life Get a Google Pixel phone, so you can install GrapheneOS. I recommend Google Pixel 6a. Very cheap and very good. Get rid of all the apps you don&amp;rsquo;t need Sync your data with SyncThing Create your own NextCloud server Use VimWiki/Obsidian + vim/neovim to take notes in markdown, and take full ownership over your own data Use Linux on your personal computer(s) Use pass to store your accounts/passwords Don&amp;rsquo;t let proprietary software take your money and own YOUR data Never look back </description>
      <content:encoded><![CDATA[<h2 id="unshackle-your-digital-life">Unshackle Your Digital Life</h2>
<ol>
<li>Get a Google Pixel phone, so you can install <a href="https://grapheneos.org/">GrapheneOS</a>. I recommend Google Pixel 6a. Very cheap and very good.
<ul>
<li>Get rid of all the apps you don&rsquo;t need</li>
</ul>
</li>
<li>Sync your data with <a href="https://syncthing.net/">SyncThing</a></li>
<li>Create your own <a href="https://landchad.net/nextcloud/">NextCloud</a> server</li>
<li>Use <a href="https://github.com/vimwiki/vimwiki">VimWiki</a>/<a href="https://obsidian.md/">Obsidian</a> + vim/<a href="https://github.com/neovim/neovim">neovim</a> to take notes in <a href="https://www.markdownguide.org/getting-started/">markdown</a>, and take full ownership over your own data</li>
<li>Use <a href="https://en.wikipedia.org/wiki/Linux">Linux</a> on your personal computer(s)</li>
<li>Use <a href="https://www.passwordstore.org/">pass</a> to store your accounts/passwords</li>
<li>Don&rsquo;t let <a href="https://en.wikipedia.org/wiki/Proprietary_software">proprietary software</a> take your money and own YOUR data</li>
<li>Never look back</li>
</ol>
]]></content:encoded>
    </item>
    
    <item>
      <title>GRUB Bootloader</title>
      <link>https://jonash.xyz/posts/grub-bootloader/</link>
      <pubDate>Sun, 10 Mar 2024 19:17:15 +0100</pubDate>
      
      <guid>https://jonash.xyz/posts/grub-bootloader/</guid>
      <description>First of all, what is GRUB? GRUB is a boot loader, which lets you boot up your system. The abbreviation stands for GNU GRand Unified Bootloader, and is a boot loader package from the GNU Project. GRUB is the primary bootloader for many Linux distributions, allowing users to choose from multiple operating systems or different versions of the same operating system at boot time. It&amp;rsquo;s designed to be highly configurable and supports a wide range of operating systems, not just Linux.</description>
      <content:encoded><![CDATA[<h2 id="first-of-all-what-is-grub">First of all, what is GRUB?</h2>
<p>GRUB is a boot loader, which lets you boot up your system. The abbreviation stands for GNU GRand Unified Bootloader, and is a boot loader package from the GNU Project. GRUB is the primary bootloader for many Linux distributions, allowing users to choose from multiple operating systems or different versions of the same operating system at boot time. It&rsquo;s designed to be highly configurable and supports a wide range of operating systems, not just Linux.</p>
<h2 id="why-make-this-guide">Why make this guide?</h2>
<p>The reason I made this simple guide is so you know what to do when you get to <a href="https://wiki.archlinux.org/title/Installation_guide">Arch Linux installation guide, chapter 3.8</a>.</p>
<h2 id="grub-features-include">GRUB features include:</h2>
<ul>
<li>The ability to boot multiple operating systems, including Linux, Windows, and macOS.</li>
<li>Support for reading data from various file systems, allowing it to load boot files from these file systems directly.</li>
<li>A flexible and powerful command-line interface that can be used to troubleshoot boot issues.</li>
<li>The capability to load operating systems from a network, which is particularly useful in managed IT environments.</li>
<li>A customizable menu interface that can display graphics and themes, allowing for a visually appealing boot menu.</li>
</ul>
<p>GRUB has evolved over time, with GRUB 2 being the successor to the original GRUB (referred to as GRUB Legacy). GRUB 2 offers improved modularity, portability, and features compared to its predecessor.</p>
<h2 id="installing-grub-efi-in-arch-linux">Installing GRUB EFI in Arch Linux</h2>
<p>First off, we install some packages:</p>
<pre tabindex="0"><code>sudo pacman -S vim networkmanager grub efibootmgr dosfstools os-prober mtools
</code></pre><p>(Networkmanager is optional, but highly recommended)</p>
<h2 id="enablenetworkmanager">EnableNetworkManager</h2>
<pre tabindex="0"><code>systemctl enable NetworkManager
</code></pre><h2 id="mount-efi-partition">Mount EFI-partition</h2>
<pre tabindex="0"><code>mount /dev/drive /boot/EFI
</code></pre><h2 id="install-grub">Install GRUB</h2>
<pre tabindex="0"><code>grub-install --target=x86_64-efi --bootloader-id=grub_uefi --efi-directory=/boot/EFI --no-nvram --removable --recheck
</code></pre><h2 id="make-grub-config-file">Make grub config file</h2>
<pre tabindex="0"><code>grub-mkconfig -o /boot/grub/grub.cfg
</code></pre><h2 id="reboot">Reboot</h2>
<ul>
<li>Exit the chroot environment by typing <code>exit</code> or pressing <code>Ctrl+d</code>.</li>
<li>Optionally manually unmount all the partitions with <code>umount -R /mnt</code>: this allows noticing any &ldquo;busy&rdquo; partitions, and finding the cause</li>
<li>Finally, restart the machine by typing <code>reboot</code>: any partitions still mounted will be automatically unmounted by <em>systemd</em>.</li>
<li>Remember to remove the installation medium and then login into the new system with the root account</li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>Modern Linux Tools</title>
      <link>https://jonash.xyz/posts/modern-linux-tools/</link>
      <pubDate>Sat, 09 Mar 2024 14:03:56 +0100</pubDate>
      
      <guid>https://jonash.xyz/posts/modern-linux-tools/</guid>
      <description>These modern Linux tools might enhance your workflow fd is a simple and fast file search tool, enhancing the Unix find command. exa is a modern replacement for ls, enhancing file listing with better defaults. dog is a modern, feature-rich DNS client for the command-line. ncdu is a console disk usage analyzer for quick space management. bat is a cat clone with syntax highlighting and Git integration for the command-line. sd is a simple and intuitive find-and-replace CLI tool, aiming to improve upon sed.</description>
      <content:encoded><![CDATA[<h2 id="these-modern-linux-tools-might-enhance-your-workflow">These modern Linux tools might enhance your workflow</h2>
<ul>
<li><a href="https://github.com/sharkdp/fd"><code>fd</code></a> is a simple and fast file search tool, enhancing the Unix <code>find</code> command.</li>
<li><a href="https://github.com/ogham/exa"><code>exa</code></a> is a modern replacement for <code>ls</code>, enhancing file listing with better defaults.</li>
<li><a href="https://github.com/ogham/dog"><code>dog</code></a> is a modern, feature-rich DNS client for the command-line.</li>
<li><a href="https://github.com/rofl0r/ncdu"><code>ncdu</code></a> is a console disk usage analyzer for quick space management.</li>
<li><a href="https://github.com/sharkdp/bat"><code>bat</code></a> is a <code>cat</code> clone with syntax highlighting and Git integration for the command-line.</li>
<li><a href="https://github.com/chmln/sd"><code>sd</code></a> is a simple and intuitive find-and-replace CLI tool, aiming to improve upon <code>sed</code>.</li>
<li><a href="https://github.com/bootandy/dust"><code>dust</code></a> visualizes disk usage with an emphasis on clarity, acting as a more intuitive <code>du</code>.</li>
<li><a href="https://github.com/ducaale/xh"><code>xh</code></a> is a friendly and fast HTTP client for the terminal, inspired by <code>curl</code> and <code>HTTPie</code>.</li>
<li><a href="https://github.com/muesli/duf"><code>duf</code></a>is a modern disk usage utility for the command-line with an intuitive interface.</li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>Cloud Engineering</title>
      <link>https://jonash.xyz/posts/cloud-engineering/</link>
      <pubDate>Sat, 09 Mar 2024 13:27:32 +0100</pubDate>
      
      <guid>https://jonash.xyz/posts/cloud-engineering/</guid>
      <description>Demystifying Cloud Engineering Cloud engineering is the application of engineering disciplines to cloud computing. It brings a systematic approach to the high-level concerns of commercialization, standardization, and governance in conceiving, developing, operating, and maintaining cloud computing systems. It is a multidisciplinary method that encompasses contributions from diverse areas such as systems engineering, software engineering, web engineering, and database engineering.
Key Components of Cloud Engineering Cloud Infrastructure: Design and management of the physical and virtual resources necessary for cloud computing.</description>
      <content:encoded><![CDATA[<h1 id="demystifying-cloud-engineering">Demystifying Cloud Engineering</h1>
<p>Cloud engineering is the application of engineering disciplines to cloud computing. It brings a systematic approach to the high-level concerns of commercialization, standardization, and governance in conceiving, developing, operating, and maintaining cloud computing systems. It is a multidisciplinary method that encompasses contributions from diverse areas such as systems engineering, software engineering, web engineering, and database engineering.</p>
<h2 id="key-components-of-cloud-engineering">Key Components of Cloud Engineering</h2>
<ul>
<li>
<p><strong>Cloud Infrastructure:</strong> Design and management of the physical and virtual resources necessary for cloud computing.</p>
</li>
<li>
<p><strong>Cloud Software Development:</strong> Building, deploying, and managing software applications that are hosted on cloud platforms.</p>
</li>
<li>
<p><strong>Cloud Security:</strong> Protecting cloud-based systems, data, and infrastructure from cybersecurity threats.</p>
</li>
<li>
<p><strong><a href="/posts/what-is-devops">DevOps</a> in the Cloud:</strong> Integrating development and operations teams to improve collaboration and productivity by automating infrastructure, workflows, and continuously measuring application performance.</p>
</li>
</ul>
<h2 id="benefits-of-cloud-engineering">Benefits of Cloud Engineering</h2>
<ul>
<li>
<p><strong>Scalability:</strong> Easy to scale computing resources up or down based on demand, ensuring flexibility and cost-effectiveness.</p>
</li>
<li>
<p><strong>Cost Efficiency:</strong> Reduces the need for significant upfront investment in IT infrastructure and decreases the cost of IT management and maintenance.</p>
</li>
<li>
<p><strong>Innovation:</strong> Facilitates rapid development, testing, and deployment of applications, allowing for faster innovation and time to market.</p>
</li>
<li>
<p><strong>Reliability:</strong> Offers reliable services with data backup, disaster recovery, and redundancy features to ensure continuous operation.</p>
</li>
</ul>
<h2 id="best-practices-in-cloud-engineering">Best Practices in Cloud Engineering</h2>
<ul>
<li>
<p><strong>Emphasize Security:</strong> Implement robust security measures, including identity and access management, encryption, and security protocols.</p>
</li>
<li>
<p><strong>Opt for Multi-Cloud and Hybrid Cloud Strategies:</strong> Utilize multiple cloud service providers or a combination of public and private clouds to avoid vendor lock-in and enhance business continuity.</p>
</li>
<li>
<p><strong>Monitor and Manage Performance:</strong> Continuously monitor cloud resources and applications to optimize performance, reduce costs, and improve customer satisfaction.</p>
</li>
<li>
<p><strong>Adopt Automation:</strong> Leverage automation for provisioning, deployment, scaling, and management tasks to increase efficiency and reduce human errors.</p>
</li>
</ul>
<h2 id="conclusion">Conclusion</h2>
<p>Cloud engineering is a vital field in today&rsquo;s digital landscape, offering scalable, flexible, and cost-effective solutions for businesses. By understanding and applying the principles of cloud engineering, organizations can leverage the full potential of cloud computing to innovate, grow, and stay competitive in the rapidly evolving technology market.</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>From darkness to light</title>
      <link>https://jonash.xyz/posts/from-darkness-to-light/</link>
      <pubDate>Sat, 09 Mar 2024 13:16:18 +0100</pubDate>
      
      <guid>https://jonash.xyz/posts/from-darkness-to-light/</guid>
      <description>From darkness to light In winter&amp;rsquo;s clutch, the world lay still,
A canvas painted in shades of chill.
The trees stood bare, the skies so gray,
Hope seemed far, in disarray.
But time moves on, as whispers in the wind,
Hint at change, where despair had been pinned.
The snow melts away, revealing the ground,
A symbol of life, soon to be found.
Spring arrives with a gentle embrace,
Awakening the earth with its grace.</description>
      <content:encoded><![CDATA[<h1 id="from-darkness-to-light">From darkness to light</h1>
<p>In winter&rsquo;s clutch, the world lay still,<br>
A canvas painted in shades of chill.<br>
The trees stood bare, the skies so gray,<br>
Hope seemed far, in disarray.</p>
<p>But time moves on, as whispers in the wind,<br>
Hint at change, where despair had been pinned.<br>
The snow melts away, revealing the ground,<br>
A symbol of life, soon to be found.</p>
<p>Spring arrives with a gentle embrace,<br>
Awakening the earth with its grace.<br>
Flowers bloom, painting the world anew,<br>
In vibrant hues of every hue.</p>
<p>The sun breaks through the lingering gloom,<br>
Filling hearts with warmth, dispelling doom.<br>
Birds sing songs of joy, so sweet and clear,<br>
Proclaiming the news that happiness is near.</p>
<p>This transition, from dark to light,<br>
Reminds us all of the perpetual fight.<br>
For after every hardship, there comes ease,<br>
A cycle of life, meant to appease.</p>
<p>So let us welcome spring, with open arms,<br>
And find solace in its charms.<br>
For it brings hope, and a fresh start,<br>
Healing the winter&rsquo;s wounds in our heart.</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>What Is Devops</title>
      <link>https://jonash.xyz/posts/what-is-devops/</link>
      <pubDate>Sat, 09 Mar 2024 13:09:52 +0100</pubDate>
      
      <guid>https://jonash.xyz/posts/what-is-devops/</guid>
      <description>Understanding DevOps: A Brief Overview DevOps, a compound of development (Dev) and operations (Ops), is a software development and delivery approach that emphasizes communication, collaboration, integration, and automation among software developers and IT operations teams. The goal of DevOps is to improve and speed up the delivery of software applications and services. By fostering a culture where building, testing, and releasing software can happen rapidly, frequently, and more reliably, DevOps has become a key practice in the software industry.</description>
      <content:encoded><![CDATA[<h1 id="understanding-devops-a-brief-overview">Understanding DevOps: A Brief Overview</h1>
<p>DevOps, a compound of development (Dev) and operations (Ops), is a software development and delivery approach that emphasizes communication, collaboration, integration, and automation among software developers and IT operations teams. The goal of DevOps is to improve and speed up the delivery of software applications and services. By fostering a culture where building, testing, and releasing software can happen rapidly, frequently, and more reliably, DevOps has become a key practice in the software industry.</p>
<h2 id="key-principles-of-devops">Key Principles of DevOps</h2>
<ul>
<li>
<p><strong>Continuous Integration (CI):</strong> Developers merge their changes back to the main branch as often as possible. Automated tests run with these integrations to catch bugs quickly.</p>
</li>
<li>
<p><strong>Continuous Delivery (CD):</strong> This practice involves automatically deploying all code changes to a testing or staging environment after the build stage. It ensures that the software can be reliably released at any time.</p>
</li>
<li>
<p><strong>Automated Testing:</strong> Automation in testing reduces manual workload and speeds up the process of software development and deployment.</p>
</li>
<li>
<p><strong>Infrastructure as Code (IaC):</strong> Managing and provisioning infrastructure through code instead of through manual processes, improving operational efficiency and cloud management.</p>
</li>
<li>
<p><strong>Monitoring and Logging:</strong> Keeping track of the performance of applications and infrastructure to quickly respond to issues.</p>
</li>
<li>
<p><strong>Collaboration and Communication:</strong> Encouraging open communication and collaboration within and between teams to enhance the development process.</p>
</li>
</ul>
<h2 id="benefits-of-devops">Benefits of DevOps</h2>
<ul>
<li>
<p><strong>Faster Time to Market:</strong> Shortened development cycles lead to faster innovation and a quicker time to market.</p>
</li>
<li>
<p><strong>Improved Collaboration:</strong> Breaking down silos between teams enhances collaboration and efficiency.</p>
</li>
<li>
<p><strong>Increased Efficiency:</strong> Automation and streamlined workflows increase the efficiency of the development and deployment processes.</p>
</li>
<li>
<p><strong>Enhanced Quality:</strong> Continuous integration and delivery ensure that quality is maintained through frequent code updates and testing.</p>
</li>
<li>
<p><strong>Higher Customer Satisfaction:</strong> Rapid deliveries of updates and new features lead to higher customer satisfaction.</p>
</li>
</ul>
<h2 id="conclusion">Conclusion</h2>
<p>DevOps is not just a set of practices but a culture that needs to be adopted for its full potential to be realized. By embracing DevOps, organizations can enhance their ability to deliver applications and services at high velocity, thereby outpacing their competitors in today&rsquo;s fast-paced digital world.</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
