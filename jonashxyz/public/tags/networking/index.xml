<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Networking on Jonas Hestdahl</title>
    <link>https://jonash.xyz/tags/networking/</link>
    <description>Recent content in Networking on Jonas Hestdahl</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 17 May 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://jonash.xyz/tags/networking/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Understanding Network Prefixes</title>
      <link>https://jonash.xyz/posts/understanding-network-prefixes/</link>
      <pubDate>Fri, 17 May 2024 00:00:00 +0000</pubDate>
      
      <guid>https://jonash.xyz/posts/understanding-network-prefixes/</guid>
      <description>Network Prefixes Network prefixes are a fundamental concept in IP networking, particularly in the context of CIDR (Classless Inter-Domain Routing). They define the portion of an IP address that is used for network identification, as opposed to host identification within that network. A network prefix is a part of an IP address that indicates the network to which the IP address belongs. It is represented by a combination of an IP address and a subnet mask or prefix length.</description>
      <content:encoded><![CDATA[<h3 id="network-prefixes">Network Prefixes</h3>
<p>Network prefixes are a fundamental concept in IP networking, particularly in the context of CIDR (Classless Inter-Domain Routing). They define the portion of an IP address that is used for network identification, as opposed to host identification within that network.
A network prefix is a part of an IP address that indicates the network to which the IP address belongs. It is represented by a combination of an IP address and a subnet mask or prefix length.</p>
<h4 id="cidr-notation">CIDR Notation</h4>
<p>CIDR notation expresses an IP address and its associated network prefix in a concise format:</p>
<ul>
<li><strong>Format</strong>: <code>IP_address/prefix_length</code></li>
<li><strong>Example</strong>: <code>192.168.1.0/24</code></li>
</ul>
<p>In this example, <code>192.168.1.0</code> is the network address, and <code>/24</code> indicates that the first 24 bits of the IP address are used for the network prefix. The remaining bits (32 - 24 = 8 bits) are used for host addresses within that network.</p>
<h3 id="network-prefix-sizes-and-their-reasoning">Network Prefix Sizes and Their Reasoning</h3>
<p>The size of the network prefix determines the number of networks and the number of hosts per network. The prefix length specifies how many bits of the IP address are used for the network portion:</p>
<ul>
<li><strong>Shorter Prefix (e.g., /8)</strong>: More bits for the host part, fewer networks, and more hosts per network.</li>
<li><strong>Longer Prefix (e.g., /24)</strong>: More bits for the network part, more networks, and fewer hosts per network.</li>
</ul>
<h4 id="ipv4-addressing">IPv4 Addressing</h4>
<p>IPv4 addresses are 32 bits long, and the prefix length can range from 0 to 32:</p>
<ul>
<li>
<p><strong>/8 Prefix</strong>:</p>
<ul>
<li>Network portion: 8 bits</li>
<li>Host portion: 24 bits</li>
<li>Example: <code>10.0.0.0/8</code></li>
<li>Number of networks: 2^8 = 256</li>
<li>Number of hosts per network: 2^24 - 2 = 16,777,214 (subtracting 2 for network and broadcast addresses)</li>
</ul>
</li>
<li>
<p><strong>/16 Prefix</strong>:</p>
<ul>
<li>Network portion: 16 bits</li>
<li>Host portion: 16 bits</li>
<li>Example: <code>192.168.0.0/16</code></li>
<li>Number of networks: 2^16 = 65,536</li>
<li>Number of hosts per network: 2^16 - 2 = 65,534</li>
</ul>
</li>
<li>
<p><strong>/24 Prefix</strong>:</p>
<ul>
<li>Network portion: 24 bits</li>
<li>Host portion: 8 bits</li>
<li>Example: <code>192.168.1.0/24</code></li>
<li>Number of networks: 2^24 = 16,777,216</li>
<li>Number of hosts per network: 2^8 - 2 = 254</li>
</ul>
</li>
</ul>
<h3 id="reasoning-behind-prefix-sizes">Reasoning Behind Prefix Sizes</h3>
<ol>
<li>
<p><strong>Efficient Use of IP Space</strong>:</p>
<ul>
<li>Prefix sizes allow networks to be divided into appropriately sized subnets, optimizing the allocation of IP addresses.</li>
<li>Organizations can choose a prefix size that matches their network size, reducing waste and ensuring efficient utilization.</li>
</ul>
</li>
<li>
<p><strong>Hierarchical Network Design</strong>:</p>
<ul>
<li>Prefix sizes support hierarchical structuring of networks, simplifying routing and management.</li>
<li>Larger prefixes (/8, /16) are used for broader network segments, while smaller prefixes (/24, /28) are used for specific subnets.</li>
</ul>
</li>
<li>
<p><strong>Scalability and Flexibility</strong>:</p>
<ul>
<li>CIDR and variable prefix lengths enable scalable network design, accommodating both large and small networks.</li>
<li>Flexibility in prefix length allows networks to be easily subdivided or aggregated as needed.</li>
</ul>
</li>
<li>
<p><strong>Routing Efficiency</strong>:</p>
<ul>
<li>Larger prefixes reduce the number of routing table entries by aggregating multiple networks into a single route.</li>
<li>This aggregation improves routing efficiency and performance by minimizing the size of routing tables.</li>
</ul>
</li>
</ol>
<h3 id="practical-example">Practical Example</h3>
<p>Consider a company with three departments, each requiring a separate subnet with around 50 devices. Using CIDR, you can allocate:</p>
<ul>
<li><strong>Subnet for Department A</strong>: <code>192.168.1.0/26</code> (64 addresses, 62 usable)</li>
<li><strong>Subnet for Department B</strong>: <code>192.168.1.64/26</code> (64 addresses, 62 usable)</li>
<li><strong>Subnet for Department C</strong>: <code>192.168.1.128/26</code> (64 addresses, 62 usable)</li>
</ul>
<p>Each department gets a subnet that closely matches its needs, optimizing IP address usage.</p>
<h3 id="summary">Summary</h3>
<p>Network prefixes are crucial for defining the structure and size of IP networks. The length of the prefix determines the division between the network and host portions of an IP address, impacting the number of available networks and hosts. By using CIDR notation and flexible prefix lengths, network administrators can efficiently allocate IP address space, design scalable networks, and optimize routing performance.</p>
<h2 id="links">Links:</h2>
<p>202405171407</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Why is CIDR routing more efficient than classful network design?</title>
      <link>https://jonash.xyz/posts/why-is-cidr-routing-more-efficient-than-classful-network-design/</link>
      <pubDate>Fri, 17 May 2024 00:00:00 +0000</pubDate>
      
      <guid>https://jonash.xyz/posts/why-is-cidr-routing-more-efficient-than-classful-network-design/</guid>
      <description>Classless Inter-Domain Routing (CIDR) is more efficient than the older classful network design for several key reasons;
1. Flexible Subnetting and Address Allocation Classful Network Design: IP addresses were divided into fixed classes (A, B, C, D, E). Class A: 16 million addresses (8-bit network prefix). Class B: 65,536 addresses (16-bit network prefix). Class C: 256 addresses (24-bit network prefix). This fixed structure often led to significant wastage of IP addresses.</description>
      <content:encoded><![CDATA[<p>Classless Inter-Domain Routing (CIDR) is more efficient than the older classful network design for several key reasons;</p>
<h2 id="1-flexible-subnetting-and-address-allocation">1. Flexible Subnetting and Address Allocation</h2>
<h3 id="classful-network-design">Classful Network Design:</h3>
<ul>
<li>IP addresses were divided into fixed classes (A, B, C, D, E).</li>
<li>Class A: 16 million addresses (8-bit network prefix).</li>
<li>Class B: 65,536 addresses (16-bit network prefix).</li>
<li>Class C: 256 addresses (24-bit network prefix).</li>
<li>This fixed structure often led to significant wastage of IP addresses. For example, a network needing 300 addresses would require a Class B allocation, wasting most of the 65,536 addresses.</li>
</ul>
<h3 id="cidr">CIDR:</h3>
<ul>
<li>Allows for arbitrary-length network prefixes, enabling more precise allocation of IP addresses.</li>
<li>Example: A CIDR block like 192.168.0.0/22 can allocate 1,024 addresses (covering 192.168.0.0 to 192.168.3.255), which is more efficient than allocating a larger block unnecessarily.</li>
<li>This flexibility reduces wastage and allows for better utilization of IP address space.</li>
</ul>
<h2 id="2-simplified-routing-and-reduced-routing-table-size">2. Simplified Routing and Reduced Routing Table Size</h2>
<h3 id="classful-network-design-1">Classful Network Design</h3>
<ul>
<li>Each network class required its entry in routing tables.</li>
<li>The rigid class boundaries could lead to numerous routing table entries, especially with many small networks.</li>
</ul>
<h3 id="cidr-1">CIDR</h3>
<ul>
<li>Enables route aggregation (supernetting), which combines multiple IP address ranges into a single routing table entry.</li>
<li>Example: Multiple networks like 192.168.0.0/24, 192.168.1.0/24, 192.168.2.0/24, and 192.168.3.0/24 can be aggregated into a single CIDR block 192.168.0.0/22.</li>
<li>This reduces the number of entries in routing tables, leading to faster and more efficient routing.</li>
</ul>
<h2 id="3-improved-internet-scalability">3. Improved Internet Scalability</h2>
<h3 id="classful-network-design-2">Classful Network Design</h3>
<ul>
<li>The rapid growth of the Internet led to the exhaustion of available Class B and C addresses.</li>
<li>The class-based allocation system struggled to keep up with the expanding number of networks.</li>
</ul>
<h3 id="cidr-2">CIDR</h3>
<ul>
<li>Delays IPv4 address exhaustion by allowing more granular allocation of address space.</li>
<li>Supports hierarchical IP address allocation, which improves the scalability of the global routing system.</li>
<li>Internet Service Providers (ISPs) can allocate IP addresses more efficiently, reducing the need for frequent renumbering and reallocation.</li>
</ul>
<h2 id="4-enhanced-network-design-flexibility">4. Enhanced Network Design Flexibility</h2>
<h3 id="classful-network-design-3">Classful Network Design</h3>
<ul>
<li>Networks were constrained to predefined sizes, making it difficult to design networks that matched organizational needs precisely.</li>
<li>Limited flexibility in managing and optimizing network resources.</li>
</ul>
<h3 id="cidr-3">CIDR</h3>
<ul>
<li>Provides the ability to create subnets and supernets tailored to specific requirements.</li>
<li>Organizations can design networks that closely match their size and growth expectations, optimizing resource usage and management.</li>
</ul>
<h2 id="summary-of-efficiency-gains">Summary of Efficiency Gains</h2>
<ul>
<li>Address Utilization: CIDR reduces IP address wastage by allowing precise subnetting.</li>
<li>Routing Efficiency: CIDR minimizes routing table size through route aggregation, enhancing routing performance.</li>
<li>Scalability: CIDR supports the growth of the Internet by enabling more efficient use of the IPv4 address space.</li>
<li>Flexibility: CIDR offers greater flexibility in network design, accommodating diverse organizational needs.</li>
</ul>
<h2 id="practical-example">Practical Example</h2>
<p>Imagine a company needing IP addresses for 500 hosts. Under the classful system, they would have to use a Class B network (/16), which provides 65,536 addresses, wasting a vast majority. With CIDR, they can allocate a 23-bit network prefix (e.g., 192.168.0.0/23), providing 512 addresses, which is a much more efficient use of IP space.</p>
<p>By adopting CIDR, the efficiency of IP address allocation and routing is significantly improved, making it a preferred choice for modern networking.</p>
<h2 id="links">Links:</h2>
<p>202405171433</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
